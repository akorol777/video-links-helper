{"version":3,"sources":["components/Tab.js","components/EnvTabs.js","actions/actions.js","components/Link.js","selectors/links.js","components/Links.js","components/DomainTabs.js","components/TrafficTabs.js","components/InputPR.js","components/LabelToggle.js","components/Opener.js","components/App.js","reducers/reducers.js","store/configureStore.js","index.js"],"names":["Tab","_this","this","_this$props","props","title","classNames","isActive","react_default","a","createElement","className","onClick","handleClick","Component","EnvTabs","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleChangeEnv","env","chooseEnv","inherits","createClass","key","value","_this2","envTitles","map","i","components_Tab","activeEnv","connect","state","store","dispatch","type","choose_env","Link","renderLabel","domain","href","link","target","rel","data","require","Links","_ref","_ref$env","_ref$domain","pr_num","_ref$traffic","traffic","activeDomains","keys","domains","split","isStage","isProd","getHost","domain_link","isMSN","getQuery","query","sign","addToQuery","string","activeDomain","getLinks","show_label","DomainTabs","handleChangeDomain","chooseDomain","domainTitles","toConsumableArray","choose_domain","TrafficTabs","handleChangeTraffic","chooseTraffic","trafficTitles","activeTraffic","choose_traffic","InputPR","onPrNumChange","e","prNum","setState","choosePrNum","placeholder","autoFocus","onChange","change_pr_num","LabelToggle","handleLabelToggle","toggleShowLabel","text","toggle_show_label","Opener","id","links","document","querySelectorAll","_loop","setTimeout","click","App","body","addEventListener","which","keyCode","getElementById","components_EnvTabs","components_InputPR","components_DomainTabs","components_TrafficTabs","components_Links","components_LabelToggle","linksReducerDefaultState","reducers","undefined","action","objectSpread","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","reducer","applyMiddleware","thunk","jsx","es","components_App","ReactDOM","render"],"mappings":"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","file":"static/js/main.b9c3b681.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Tab extends Component {\n\n  render() {\n    const { title, isActive } = this.props;\n    const classNames = isActive ? 'is-active button' : 'button';\n\n    return (\n      <div\n        className={classNames}\n        onClick={() => {\n          this.props.handleClick(title)\n        }}\n      >\n        {title}\n      </div>\n    )\n  }\n}\n\nexport default Tab;","import React, { Component } from 'react';\nimport Tab from './Tab';\nimport { connect } from 'react-redux';\nimport { choose_env } from '../actions/actions';\n\nexport class EnvTabs extends Component {\n  handleChangeEnv = (env) => {\n    this.props.chooseEnv(env);\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        {this.props.envTitles.map((title, i) => {\n          return <Tab\n            title={title}\n            key={i}\n            isActive={this.props.activeEnv === title}\n            handleClick={this.handleChangeEnv}\n          />\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeEnv: state.store.env\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  chooseEnv: (env) => dispatch(choose_env(env))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EnvTabs);\n","export const choose_env = (env) => ({\n  type: 'CHOOSE_ENV',\n  env\n});\n\nexport const choose_domain = (domain) => ({\n  type: 'CHOOSE_DOMAIN',\n  domain\n});\n\nexport const choose_traffic = (traffic) => ({\n  type: 'CHOOSE_TRAFFIC',\n  traffic\n});\n\n\nexport const change_pr_num = (pr_num) => ({\n  type: 'CHANGE_PR_NUM',\n  pr_num\n});\n\nexport const toggle_show_label = (show_label) => ({\n  type: 'TOGGLE_SHOW_LABEL',\n  show_label\n});","import React from 'react';\n\nexport default (props) => {\n  const renderLabel = (\n    props.domain &&\n    <div className=\"link__label\">\n      {props.domain}\n    </div>\n  );\n\n  return (\n    <div className=\"link__wrapper\">\n      {renderLabel}\n      <a\n        href={props.link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"link js-link-to-open\"\n      >{props.link}</a>\n    </div>\n  );\n};","const data = require('../JSON/data.json');\n\nexport default ({\n    env = data.env[0],\n    domain = 'all',\n    pr_num,\n    traffic = data.traffic[0]\n  }) => {\n\n  const LOCALHOST = 'localhost:3000';\n  const MSN_LOCALHOST = 'msn.lvh.me:3000/en-us/entertainment/rf-watch-online';\n  const activeEnv = env;\n  const activeDomains = domain === 'all' ? Object.keys(data.domains) : domain.split();\n  const isStage = () => activeEnv === 'stage';\n  const isProd = () => activeEnv === 'prod';\n\n  // PROTOCOL\n  const getProtocol = () => isStage() || isProd() ? 'https://' : 'http://';\n\n  // HOST\n  const getHost = (domain) => {\n    const domain_link = data.domains[domain][activeEnv];\n    const isMSN = () => domain === 'MSN';\n    const msnStageLink = 'int1.msn.com/en-us/entertainment/rf-watch-online?rf_env=staging&sys_id=123456789';\n\n    // Stage\n    if (isStage()) {\n      if (isMSN()) {\n        return msnStageLink;\n      }\n      return `streaming-engine-stagi-pr-${pr_num}.herokuapp.com`\n    }\n\n    // Prod\n    if (isProd()) {\n      return domain_link\n    }\n\n    // Local\n    return isMSN() ? MSN_LOCALHOST : LOCALHOST;\n  };\n\n  // PATH\n  const getPath = () => '';\n\n  // QUERY\n  const getQuery = (domain) => {\n    let query = '';\n    let sign = '?';\n    const isMSN = () => domain === 'MSN';\n\n    const addToQuery = (string) => {\n      query += sign + string;\n      sign = '&';\n    };\n\n    // Stage\n    if (isStage()) {\n      if (isMSN()) {\n        addToQuery(`rf_env=staging&sys_id=123456789`);\n      } else {\n        addToQuery(`staging_domain=${data.domains[domain][activeEnv]}`);\n      }\n\n    // Prod\n    } else if (isProd()) {\n\n    // Local\n    } else {\n      if (isMSN()) {\n\n      } else {\n        addToQuery(`staging_domain=${data.domains[domain][activeEnv]}`);\n      }\n    }\n\n    addToQuery(`force_traffic=${traffic}`);\n\n    return query;\n  };\n\n  const activeLinks = activeDomains.map((activeDomain) => {\n    getQuery(activeDomain);\n    return {\n      link: getProtocol() + getHost(activeDomain) + getPath() + getQuery(activeDomain),\n      domain: activeDomain\n    }\n  });\n\n  return activeLinks\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Link from './Link';\nimport getLinks from '../selectors/links'\n\nclass Links extends Component {\n  render() {\n\n    return (\n      <div>\n        {getLinks(this.props.store).map(({link, domain, pr_num}, i) => {\n          return <Link\n            link = {link}\n            key = {i}\n            domain = {this.props.store.show_label ? domain : null}\n          />;\n        })}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  store: state.store\n});\n\nexport default connect(mapStateToProps)(Links);\n","import React, { Component } from 'react';\nimport Tab from './Tab';\nimport { connect } from 'react-redux';\nimport { choose_domain } from \"../actions/actions\";\n\nclass DomainTabs extends Component {\n  handleChangeDomain = (domain) => {\n    this.props.chooseDomain(domain);\n  };\n\n  render() {\n    const domainTitles = ['all', ...this.props.domainTitles];\n\n    return (\n      <div className=\"row\">\n        {domainTitles.map((title, i) => {\n          return <Tab\n            title={title}\n            key={i}\n            isActive={this.props.activeDomain === title}\n            handleClick={this.handleChangeDomain}\n          />\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeDomain: state.store.domain\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  chooseDomain: (domain) => dispatch(choose_domain(domain))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DomainTabs);","import React, { Component } from 'react';\nimport Tab from './Tab';\nimport { connect } from 'react-redux';\nimport { choose_traffic } from \"../actions/actions\";\n\nclass TrafficTabs extends Component {\n  handleChangeTraffic = (traffic) => {\n    this.props.chooseTraffic(traffic);\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        {this.props.trafficTitles.map((title, i) => {\n          return <Tab\n            title={title}\n            key={i}\n            isActive={this.props.activeTraffic === title}\n            handleClick={this.handleChangeTraffic}\n          />\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeTraffic: state.store.traffic\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  chooseTraffic: (traffic) => dispatch(choose_traffic(traffic))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrafficTabs);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { change_pr_num, } from \"../actions/actions\";\n\nclass InputPR extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prNum: this.props.prNum\n    };\n  }\n\n  isStage = () => this.props.activeEnv === 'stage';\n\n  isMSN = () => this.props.activeDomain === 'MSN';\n\n  onPrNumChange = (e) => {\n    const prNum = e.target.value;\n    this.setState(() => ({ prNum }));\n    this.props.choosePrNum(prNum);\n  };\n\n  render() {\n    if (this.isStage() && !this.isMSN()) {\n      return (\n        <input\n          type=\"number\"\n          placeholder=\"PR num\"\n          autoFocus\n          value={this.state.prNum}\n          onChange={this.onPrNumChange}\n        />\n      )\n    }\n    return null;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeEnv: state.store.env,\n  activeDomain: state.store.domain,\n  prNum: state.store.pr_num\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  choosePrNum: (pr_num) => dispatch(change_pr_num(pr_num))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputPR);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { toggle_show_label } from \"../actions/actions\";\n\nclass LabelToggle extends Component {\n  handleLabelToggle = () => {\n    this.props.toggleShowLabel(!this.props.show_label)\n  };\n\n  render() {\n\n    const text = this.props.show_label ? 'Hide labels' : 'Show labels';\n\n    return (\n      <div\n        className=\"button\"\n        onClick={this.handleLabelToggle}\n      >{text}</div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  show_label: state.store.show_label\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleShowLabel: (show_label) => dispatch(toggle_show_label(show_label))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LabelToggle);","import React from 'react';\n\nexport default () => {\n  const handleOpeAll = () => {\n    const links = document.querySelectorAll('.js-link-to-open');\n\n    for (let i = 0; i < links.length; i++) {\n      setTimeout(function() {\n        links[i].click();\n      }, i * 10 );\n    }\n  };\n\n  return (\n    <div\n      className=\"button\"\n      id=\"js-open-all-links-btn\"\n      onClick={handleOpeAll}\n    >\n      Open all\n    </div>\n  )\n};","import React, { Component } from 'react';\nimport '../styles/App.scss';\nimport EnvTabs from \"./EnvTabs\";\nimport Links from \"./Links\";\nimport DomainTabs from \"./DomainTabs\";\nimport TrafficTabs from \"./TrafficTabs\";\nimport InputPR from \"./InputPR\";\nimport LabelToggle from \"./LabelToggle\";\nimport Opener from \"./Opener\"\n\nconst data = require('../JSON/data.json');\nconst envTitles = data.env;\nconst domainTitles = Object.keys(data.domains);\nconst trafficTitles = data.traffic;\n\nclass App extends Component {\n  componentDidMount() {\n    // Open all links on Enter\n    document.body.addEventListener('keypress', function (e) {\n      var key = e.which || e.keyCode;\n      if (key === 13) {\n        document.getElementById('js-open-all-links-btn').click();\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <EnvTabs envTitles={envTitles}/>\n        <InputPR/>\n        <DomainTabs domainTitles={domainTitles}/>\n        <TrafficTabs trafficTitles={trafficTitles}/>\n        <Links />\n        <div className=\"row\">\n          <LabelToggle/>\n          <Opener />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const linksReducerDefaultState = {\n  env: 'local',\n  domain: 'all',\n  pr_num: 2158,\n  show_label: true,\n  traffic: 'paid'\n};\n\nexport default (state = linksReducerDefaultState, action) => {\n  switch (action.type) {\n    case 'CHOOSE_ENV':\n      return {\n        ...state,\n        env: action.env\n      };\n\n    case 'CHOOSE_DOMAIN':\n      return {\n        ...state,\n        domain: action.domain\n      };\n\n    case 'CHOOSE_TRAFFIC':\n      return {\n        ...state,\n        traffic: action.traffic\n      };\n\n    case 'CHANGE_PR_NUM':\n      return {\n        ...state,\n        pr_num: action.pr_num\n      };\n\n    case 'TOGGLE_SHOW_LABEL':\n      return {\n        ...state,\n        show_label: action.show_label\n      };\n\n    default:\n      return state;\n  }\n};","import {createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers/reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      store: reducer\n    }),\n    composeEnhancers(applyMiddleware(thunk))\n  );\n\n  return store;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './styles/index.scss';\nimport App from './components/App';\nimport configureStore from './store/configureStore'\n\nconst store = configureStore();\nconst jsx = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(jsx, document.getElementById('root'));\n"],"sourceRoot":""}